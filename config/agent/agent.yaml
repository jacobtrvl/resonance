apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: resonance
    app.kubernetes.io/managed-by: kustomize
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: resonance
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: resonance
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: resonance
    spec:
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution.
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
      securityContext:
        # Projects are configured by default to adhere to the "restricted" Pod Security Standards.
        # This ensures that deployments meet the highest security requirements for Kubernetes.
        # For more details, see: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - command:
        - /manager
        args:
          - --leader-elect
          - --health-probe-bind-address=:8081
        image: controller:latest
        name: manager
        env:
        - name: MASTER_KUBECONFIG
          value: |-
            clusters:
              - cluster:
                  certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJSUZVSE1GSlhBVlV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBMk1EZ3lNREUwTUROYUZ3MHpOVEEyTURZeU1ERTVNRE5hTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURNMnRZWmh5aWxnREVmSkNQVThiL3lFM0FNS3FoVkNxdW9ZL3ZQbVYxZ0l3eFZxZFhEcGl5bFFwaVMKUmRmWDBmN09wL2ZPeFFxZGdMNEJtOGtkVUZxQjFrYlM0Zy9CSll0aFNXSHQ5MVhEQUkrSzVnMEdDczNpUzhsaApoaDV5MzRMdndyS0FFc0hzeFl3V2djS2NuNUhaTWNWamowTllYZHF1ZmVFNWVKd1JWM01YOTBxYkVyekZPS0orClQyRWplU3NONVdIemJxUVc3WGRGSUhhN05YMEJlZGhMZ3pZOVVsRk1lc3RvVUxWOXlsSVRsRFg2ZzZJMG9RSXcKZmlwanEyWXNhazNYWlFWRFAwSGErTTZ1VWRIL3BaSktRWi9GNENxYXpVTTI3dkw5VFZWVTJxZ3ViOEJ0c3BrZQpzRnBXVk5iMEtVYitTSWkzbk9EMUVwTkhwVVlOQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTbjVoMUVmYVE4NDBqbjAvRzRQUTBqR2g1YXBUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVFGZ2VuNzJQdwpoZU80am1qU1Y2cU9ibUlQV2pHOVlqV0xJaVdBaHpObEZSTDNxZGRFMmxtVHdKeHI1TmwwbDZsTGZLNUx1RlM3Ci92U0VlRDF4STJ3dXMwaHhBMjFqeG1nQklMTzJTem9JOS90ZlZlLzQzTjRCaGx6bWxpQk1lbXRPOGZLL3NuaSsKREdLL0NFU2p3MW5COEFaTGFNbnZqSG5RVVpPUExPTWMrWFh0L09LWnhXcEkvbGhHSHUyRCtLQmFVazlSUzhMdwphWUtUQW9nbDV2K2p0dlMyOHdpVTJQNjJjcEw4aVA0WkV1VUZRUUdTNXRXWmZRSEdQbUcyTG9UcmhzSUNVWEdGCkxNSmZpY1hLZ2ZORmorZ2k4K0ZJelllUlVENUlWUDQ4YmtPSWcxYTNsMlhqMjVaeUIySnpoektIL2RxZk43YzgKYUhseW9kYTlBQStuCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
                  server: https://127.0.0.1:44301
                name: kind-master-cluster
        ports: []
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        volumeMounts: []
      volumes: []
      serviceAccountName: resonance-controller-manager
      terminationGracePeriodSeconds: 10
